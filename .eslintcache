[{"/home/mo/project/ecommerce/src/components/Products/Products.jsx":"1","/home/mo/project/ecommerce/src/App.js":"2","/home/mo/project/ecommerce/src/components/Navbar/styles.js":"3","/home/mo/project/ecommerce/src/components/Cart/Cart.js":"4","/home/mo/project/ecommerce/src/components/Navbar/Navbar.jsx":"5","/home/mo/project/ecommerce/src/components/Cart/CartItem/CartItem.js":"6","/home/mo/project/ecommerce/src/components/Products/styles.js":"7","/home/mo/project/ecommerce/src/components/CheckoutForm/Checkout/styles.js":"8","/home/mo/project/ecommerce/src/components/CheckoutForm/Checkout/Checkout.js":"9","/home/mo/project/ecommerce/src/components/CheckoutForm/AddressForm.js":"10","/home/mo/project/ecommerce/src/components/CheckoutForm/CustomTextField.js":"11","/home/mo/project/ecommerce/src/components/CheckoutForm/PaymentForm.js":"12","/home/mo/project/ecommerce/src/components/index.js":"13","/home/mo/project/ecommerce/src/index.js":"14","/home/mo/project/ecommerce/src/components/CheckoutForm/Review.js":"15"},{"size":643,"mtime":1608841051519,"results":"16","hashOfConfig":"17"},{"size":2779,"mtime":1609011870136,"results":"18","hashOfConfig":"17"},{"size":1564,"mtime":1608726337651,"results":"19","hashOfConfig":"17"},{"size":2194,"mtime":1608930277745,"results":"20","hashOfConfig":"17"},{"size":1325,"mtime":1608926592270,"results":"21","hashOfConfig":"17"},{"size":1228,"mtime":1608928533181,"results":"22","hashOfConfig":"17"},{"size":286,"mtime":1608726426356,"results":"23","hashOfConfig":"17"},{"size":1157,"mtime":1608929524417,"results":"24","hashOfConfig":"17"},{"size":3606,"mtime":1609016030812,"results":"25","hashOfConfig":"17"},{"size":4590,"mtime":1609014465272,"results":"26","hashOfConfig":"17"},{"size":532,"mtime":1608932686329,"results":"27","hashOfConfig":"17"},{"size":2402,"mtime":1609014521665,"results":"28","hashOfConfig":"17"},{"size":220,"mtime":1608930029641,"results":"29","hashOfConfig":"17"},{"size":146,"mtime":1608720209270,"results":"30","hashOfConfig":"17"},{"size":891,"mtime":1608990703088,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"djffko",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mo/project/ecommerce/src/components/Products/Products.jsx",[],"/home/mo/project/ecommerce/src/App.js",[],["69","70"],"/home/mo/project/ecommerce/src/components/Navbar/styles.js",[],["71","72"],"/home/mo/project/ecommerce/src/components/Cart/Cart.js",[],"/home/mo/project/ecommerce/src/components/Navbar/Navbar.jsx",["73","74"],"import React from 'react';\nimport {AppBar, Toolbar, IconButton, Badge, MenuItem, Typography } from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport logo from \"../../assets/logo.png\";\nimport useStyles from './styles';\nimport {Link, useLocation} from \"react-router-dom\";\n\n\nconst Navbar = ({totalItems}) => {\n    const classes= useStyles()\n    const location = useLocation();\n\n    return (\n        <>\n        <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n            <Toolbar>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\n                    <img src={logo} height=\"25px\" className={classes.image} />\n                    Mo-Shope\n                </Typography>\n                <div className={classes.grow}/>\n                {location.pathname === \"/\" &&\n                <div className={classes.button}>\n                 <IconButton component={Link} to=\"/cart\" ria-label=\"Show cart items\" color=\"inherit\">\n                     <Badge badgeContent={totalItems} color=\"secondary\">\n                         <ShoppingCart />\n                     </Badge>\n                     \n                 </IconButton>\n                </div>}\n\n            </Toolbar>\n        </AppBar>\n\n        </>\n    )\n}\nexport default Navbar;","/home/mo/project/ecommerce/src/components/Cart/CartItem/CartItem.js",["75"],"import React from \"react\"; \nimport {Container, Typography, Button, Card, CardActions, CardContent,CardMedia } from \"@material-ui/core\"\nimport useStyles from './styles';\n\n\nconst CartItem = ({item,handleUpdateCartQty,handleRemoveFromCart})=> {\n\n    const classes= useStyles()\n\n    return (\n      <Card className=\"cart-item\">\n      <CardMedia image={item.media.source} alt={item.name} className={classes.media} />\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{item.line_total.formatted_with_symbol}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <div className={classes.buttons}>\n          <Button type=\"button\" onClick={() => handleUpdateCartQty(item.id,item.quantity -1)} size=\"small\">-</Button>\n          <Typography>&nbsp;{item.quantity}&nbsp;</Typography>\n          <Button type=\"button\" onClick={() => handleUpdateCartQty(item.id,item.quantity +1)} size=\"small\">+</Button>\n        </div>\n        <Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={()=>handleRemoveFromCart(item.id)}>Remove</Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default CartItem;","/home/mo/project/ecommerce/src/components/Products/styles.js",[],"/home/mo/project/ecommerce/src/components/CheckoutForm/Checkout/styles.js",[],"/home/mo/project/ecommerce/src/components/CheckoutForm/Checkout/Checkout.js",["76"],"/home/mo/project/ecommerce/src/components/CheckoutForm/AddressForm.js",["77","78"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;","/home/mo/project/ecommerce/src/components/CheckoutForm/CustomTextField.js",[],"/home/mo/project/ecommerce/src/components/CheckoutForm/PaymentForm.js",[],["79","80"],"/home/mo/project/ecommerce/src/components/index.js",[],"/home/mo/project/ecommerce/src/index.js",[],["81","82"],"/home/mo/project/ecommerce/src/components/CheckoutForm/Review.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":45,"nodeType":"91","messageId":"92","endLine":2,"endColumn":53},{"ruleId":"93","severity":1,"message":"94","line":18,"column":21,"nodeType":"95","endLine":18,"endColumn":79},{"ruleId":"89","severity":1,"message":"96","line":2,"column":9,"nodeType":"91","messageId":"92","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":37,"column":6,"nodeType":"99","endLine":37,"endColumn":12,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":41,"column":6,"nodeType":"99","endLine":41,"endColumn":8,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":49,"column":6,"nodeType":"99","endLine":49,"endColumn":27,"suggestions":"104"},{"ruleId":"83","replacedBy":"105"},{"ruleId":"85","replacedBy":"106"},{"ruleId":"83","replacedBy":"107"},{"ruleId":"85","replacedBy":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["113"],["109"],["110"],["109"],["110"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"124","text":"125"},[1328,1334],"[activeStep, cart, history]",[1668,1670],"[checkoutToken.id]",[1913,1934],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]